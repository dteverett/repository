// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RegressionSystem
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// CloseCreateOutput
        /// </summary>
        public void CloseCreateOutput()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIClaimStakerPlusWindow.UICreateOutputWindow.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(20, 13));
        }
        
        /// <summary>
        /// CloseClaimStakerPlus
        /// </summary>
        public void CloseClaimStakerPlus()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIClaimStakerPlusWindow.UIClaimStakerPlusTitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(22, 11));
        }
        
        #region Properties
        public UIClaimStakerPlusWindow UIClaimStakerPlusWindow
        {
            get
            {
                if ((this.mUIClaimStakerPlusWindow == null))
                {
                    this.mUIClaimStakerPlusWindow = new UIClaimStakerPlusWindow();
                }
                return this.mUIClaimStakerPlusWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIClaimStakerPlusWindow mUIClaimStakerPlusWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIClaimStakerPlusWindow : WinWindow
    {
        
        public UIClaimStakerPlusWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ClaimStaker Plus";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("ClaimStaker Plus");
            #endregion
        }
        
        #region Properties
        public UIClaimStakerMainMenuBar UIClaimStakerMainMenuBar
        {
            get
            {
                if ((this.mUIClaimStakerMainMenuBar == null))
                {
                    this.mUIClaimStakerMainMenuBar = new UIClaimStakerMainMenuBar(this);
                }
                return this.mUIClaimStakerMainMenuBar;
            }
        }
        
        public UICreateOutputWindow UICreateOutputWindow
        {
            get
            {
                if ((this.mUICreateOutputWindow == null))
                {
                    this.mUICreateOutputWindow = new UICreateOutputWindow(this);
                }
                return this.mUICreateOutputWindow;
            }
        }
        
        public UIClaimStakerPlusTitleBar UIClaimStakerPlusTitleBar
        {
            get
            {
                if ((this.mUIClaimStakerPlusTitleBar == null))
                {
                    this.mUIClaimStakerPlusTitleBar = new UIClaimStakerPlusTitleBar(this);
                }
                return this.mUIClaimStakerPlusTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIClaimStakerMainMenuBar mUIClaimStakerMainMenuBar;
        
        private UICreateOutputWindow mUICreateOutputWindow;
        
        private UIClaimStakerPlusTitleBar mUIClaimStakerPlusTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIClaimStakerMainMenuBar : WinMenuBar
    {
        
        public UIClaimStakerMainMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Application";
            this.WindowTitles.Add("ClaimStaker Plus");
            #endregion
        }
        
        #region Properties
        public UIOutputMenuItem UIOutputMenuItem
        {
            get
            {
                if ((this.mUIOutputMenuItem == null))
                {
                    this.mUIOutputMenuItem = new UIOutputMenuItem(this);
                }
                return this.mUIOutputMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIOutputMenuItem mUIOutputMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIOutputMenuItem : WinMenuItem
    {
        
        public UIOutputMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Output";
            this.WindowTitles.Add("ClaimStaker Plus");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UICreateMenuItem
        {
            get
            {
                if ((this.mUICreateMenuItem == null))
                {
                    this.mUICreateMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUICreateMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Create";
                    this.mUICreateMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUICreateMenuItem.WindowTitles.Add("ClaimStaker Plus");
                    #endregion
                }
                return this.mUICreateMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUICreateMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICreateOutputWindow : WinWindow
    {
        
        public UICreateOutputWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "OutputCreate";
            this.WindowTitles.Add("ClaimStaker Plus");
            #endregion
        }
        
        #region Properties
        public UIClaimIDWindow UIClaimIDWindow
        {
            get
            {
                if ((this.mUIClaimIDWindow == null))
                {
                    this.mUIClaimIDWindow = new UIClaimIDWindow(this);
                }
                return this.mUIClaimIDWindow;
            }
        }
        
        public UITestWindow UITestWindow
        {
            get
            {
                if ((this.mUITestWindow == null))
                {
                    this.mUITestWindow = new UITestWindow(this);
                }
                return this.mUITestWindow;
            }
        }
        
        public UITxtClaimIDWindow UITxtClaimIDWindow
        {
            get
            {
                if ((this.mUITxtClaimIDWindow == null))
                {
                    this.mUITxtClaimIDWindow = new UITxtClaimIDWindow(this);
                }
                return this.mUITxtClaimIDWindow;
            }
        }
        
        public UICreateWindow UICreateWindow
        {
            get
            {
                if ((this.mUICreateWindow == null))
                {
                    this.mUICreateWindow = new UICreateWindow(this);
                }
                return this.mUICreateWindow;
            }
        }
        
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("ClaimStaker Plus");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private UIClaimIDWindow mUIClaimIDWindow;
        
        private UITestWindow mUITestWindow;
        
        private UITxtClaimIDWindow mUITxtClaimIDWindow;
        
        private UICreateWindow mUICreateWindow;
        
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIClaimIDWindow : WinWindow
    {
        
        public UIClaimIDWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rdoClaim";
            this.WindowTitles.Add("ClaimStaker Plus");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UIClaimIDRadioButton
        {
            get
            {
                if ((this.mUIClaimIDRadioButton == null))
                {
                    this.mUIClaimIDRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIClaimIDRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Claim ID:";
                    this.mUIClaimIDRadioButton.WindowTitles.Add("ClaimStaker Plus");
                    #endregion
                }
                return this.mUIClaimIDRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUIClaimIDRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITestWindow : WinWindow
    {
        
        public UITestWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rdoOutputFormatTest";
            this.WindowTitles.Add("ClaimStaker Plus");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UITestRadioButton
        {
            get
            {
                if ((this.mUITestRadioButton == null))
                {
                    this.mUITestRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUITestRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Test";
                    this.mUITestRadioButton.WindowTitles.Add("ClaimStaker Plus");
                    #endregion
                }
                return this.mUITestRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUITestRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtClaimIDWindow : WinWindow
    {
        
        public UITxtClaimIDWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtClaimID";
            this.WindowTitles.Add("ClaimStaker Plus");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtClaimIDEdit
        {
            get
            {
                if ((this.mUITxtClaimIDEdit == null))
                {
                    this.mUITxtClaimIDEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtClaimIDEdit.WindowTitles.Add("ClaimStaker Plus");
                    #endregion
                }
                return this.mUITxtClaimIDEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtClaimIDEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICreateWindow : WinWindow
    {
        
        public UICreateWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "Create";
            this.WindowTitles.Add("ClaimStaker Plus");
            #endregion
        }
        
        #region Properties
        public WinButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[WinButton.PropertyNames.Name] = "Create";
                    this.mUICreateButton.WindowTitles.Add("ClaimStaker Plus");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICreateButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIClaimStakerPlusTitleBar : WinTitleBar
    {
        
        public UIClaimStakerPlusTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("ClaimStaker Plus");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("ClaimStaker Plus");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
