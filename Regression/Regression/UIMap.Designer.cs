// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Regression
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// CreateMedicalClaim - Use 'CreateMedicalClaimParams' to pass parameters into this method.
        /// </summary>
        public void CreateMedicalClaim()
        {
            #region Variable Declarations
            WinMenuItem uICreateMenuItem = this.UIClaimStakerPlusWindow.UIClaimStakerMainMenuBar.UIOutputMenuItem.UICreateMenuItem;
            WinRadioButton uIClaimIDRadioButton = this.UIClaimStakerPlusWindow.UICreateOutputWindow.UIClaimIDWindow.UIClaimIDRadioButton;
            WinRadioButton uITestRadioButton = this.UIClaimStakerPlusWindow.UICreateOutputWindow.UITestWindow.UITestRadioButton;
            WinEdit uITxtClaimIDEdit = this.UIClaimStakerPlusWindow.UICreateOutputWindow.UITxtClaimIDWindow.UITxtClaimIDEdit;
            WinButton uICreateButton = this.UIClaimStakerPlusWindow.UICreateOutputWindow.UICreateWindow.UICreateButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Launch 'C:\ClaimStakerPlus\RunClaimStakerUI.exe'
            ApplicationUnderTest runClaimStakerUIApplication = ApplicationUnderTest.Launch(this.CreateMedicalClaimParams.ExePath, this.CreateMedicalClaimParams.AlternateExePath);

            // Click 'Output' -> 'Create' menu item
            Mouse.Click(uICreateMenuItem, new Point(43, 12));

            // Select 'Claim ID:' radio button
            uIClaimIDRadioButton.Selected = this.CreateMedicalClaimParams.UIClaimIDRadioButtonSelected;

            // Select 'Test' radio button
            uITestRadioButton.Selected = this.CreateMedicalClaimParams.UITestRadioButtonSelected;

            // Type '6842608' in 'txtClaimID' text box
            uITxtClaimIDEdit.Text = this.CreateMedicalClaimParams.UITxtClaimIDEditText;

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(35, 10));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(67, 7));
        }
        
        #region Properties
        public virtual CreateMedicalClaimParams CreateMedicalClaimParams
        {
            get
            {
                if ((this.mCreateMedicalClaimParams == null))
                {
                    this.mCreateMedicalClaimParams = new CreateMedicalClaimParams();
                }
                return this.mCreateMedicalClaimParams;
            }
        }
        
        public UIClaimStakerPlusWindow UIClaimStakerPlusWindow
        {
            get
            {
                if ((this.mUIClaimStakerPlusWindow == null))
                {
                    this.mUIClaimStakerPlusWindow = new UIClaimStakerPlusWindow();
                }
                return this.mUIClaimStakerPlusWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private CreateMedicalClaimParams mCreateMedicalClaimParams;
        
        private UIClaimStakerPlusWindow mUIClaimStakerPlusWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CreateMedicalClaim'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class CreateMedicalClaimParams
    {
        
        #region Fields
        /// <summary>
        /// Launch 'C:\ClaimStakerPlus\RunClaimStakerUI.exe'
        /// </summary>
        public string ExePath = "C:\\ClaimStakerPlus\\RunClaimStakerUI.exe";
        
        /// <summary>
        /// Launch 'C:\ClaimStakerPlus\RunClaimStakerUI.exe'
        /// </summary>
        public string AlternateExePath = "C:\\ClaimStakerPlus\\RunClaimStakerUI.exe";
        
        /// <summary>
        /// Select 'Claim ID:' radio button
        /// </summary>
        public bool UIClaimIDRadioButtonSelected = true;
        
        /// <summary>
        /// Select 'Test' radio button
        /// </summary>
        public bool UITestRadioButtonSelected = true;
        
        /// <summary>
        /// Type '6842608' in 'txtClaimID' text box
        /// </summary>
        public string UITxtClaimIDEditText = "6842608";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIClaimStakerPlusWindow : WinWindow
    {
        
        public UIClaimStakerPlusWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ClaimStaker Plus";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("ClaimStaker Plus");
            #endregion
        }
        
        #region Properties
        public UIClaimStakerMainMenuBar UIClaimStakerMainMenuBar
        {
            get
            {
                if ((this.mUIClaimStakerMainMenuBar == null))
                {
                    this.mUIClaimStakerMainMenuBar = new UIClaimStakerMainMenuBar(this);
                }
                return this.mUIClaimStakerMainMenuBar;
            }
        }
        
        public UICreateOutputWindow UICreateOutputWindow
        {
            get
            {
                if ((this.mUICreateOutputWindow == null))
                {
                    this.mUICreateOutputWindow = new UICreateOutputWindow(this);
                }
                return this.mUICreateOutputWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIClaimStakerMainMenuBar mUIClaimStakerMainMenuBar;
        
        private UICreateOutputWindow mUICreateOutputWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIClaimStakerMainMenuBar : WinMenuBar
    {
        
        public UIClaimStakerMainMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Application";
            this.WindowTitles.Add("ClaimStaker Plus");
            #endregion
        }
        
        #region Properties
        public UIOutputMenuItem UIOutputMenuItem
        {
            get
            {
                if ((this.mUIOutputMenuItem == null))
                {
                    this.mUIOutputMenuItem = new UIOutputMenuItem(this);
                }
                return this.mUIOutputMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIOutputMenuItem mUIOutputMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIOutputMenuItem : WinMenuItem
    {
        
        public UIOutputMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Output";
            this.WindowTitles.Add("ClaimStaker Plus");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UICreateMenuItem
        {
            get
            {
                if ((this.mUICreateMenuItem == null))
                {
                    this.mUICreateMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUICreateMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Create";
                    this.mUICreateMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUICreateMenuItem.WindowTitles.Add("ClaimStaker Plus");
                    #endregion
                }
                return this.mUICreateMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUICreateMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICreateOutputWindow : WinWindow
    {
        
        public UICreateOutputWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "OutputCreate";
            this.WindowTitles.Add("ClaimStaker Plus");
            #endregion
        }
        
        #region Properties
        public UIClaimIDWindow UIClaimIDWindow
        {
            get
            {
                if ((this.mUIClaimIDWindow == null))
                {
                    this.mUIClaimIDWindow = new UIClaimIDWindow(this);
                }
                return this.mUIClaimIDWindow;
            }
        }
        
        public UITestWindow UITestWindow
        {
            get
            {
                if ((this.mUITestWindow == null))
                {
                    this.mUITestWindow = new UITestWindow(this);
                }
                return this.mUITestWindow;
            }
        }
        
        public UITxtClaimIDWindow UITxtClaimIDWindow
        {
            get
            {
                if ((this.mUITxtClaimIDWindow == null))
                {
                    this.mUITxtClaimIDWindow = new UITxtClaimIDWindow(this);
                }
                return this.mUITxtClaimIDWindow;
            }
        }
        
        public UICreateWindow UICreateWindow
        {
            get
            {
                if ((this.mUICreateWindow == null))
                {
                    this.mUICreateWindow = new UICreateWindow(this);
                }
                return this.mUICreateWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIClaimIDWindow mUIClaimIDWindow;
        
        private UITestWindow mUITestWindow;
        
        private UITxtClaimIDWindow mUITxtClaimIDWindow;
        
        private UICreateWindow mUICreateWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIClaimIDWindow : WinWindow
    {
        
        public UIClaimIDWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rdoClaim";
            this.WindowTitles.Add("ClaimStaker Plus");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UIClaimIDRadioButton
        {
            get
            {
                if ((this.mUIClaimIDRadioButton == null))
                {
                    this.mUIClaimIDRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIClaimIDRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Claim ID:";
                    this.mUIClaimIDRadioButton.WindowTitles.Add("ClaimStaker Plus");
                    #endregion
                }
                return this.mUIClaimIDRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUIClaimIDRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITestWindow : WinWindow
    {
        
        public UITestWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rdoOutputFormatTest";
            this.WindowTitles.Add("ClaimStaker Plus");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UITestRadioButton
        {
            get
            {
                if ((this.mUITestRadioButton == null))
                {
                    this.mUITestRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUITestRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Test";
                    this.mUITestRadioButton.WindowTitles.Add("ClaimStaker Plus");
                    #endregion
                }
                return this.mUITestRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUITestRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtClaimIDWindow : WinWindow
    {
        
        public UITxtClaimIDWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtClaimID";
            this.WindowTitles.Add("ClaimStaker Plus");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtClaimIDEdit
        {
            get
            {
                if ((this.mUITxtClaimIDEdit == null))
                {
                    this.mUITxtClaimIDEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtClaimIDEdit.WindowTitles.Add("ClaimStaker Plus");
                    #endregion
                }
                return this.mUITxtClaimIDEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtClaimIDEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICreateWindow : WinWindow
    {
        
        public UICreateWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "Create";
            this.WindowTitles.Add("ClaimStaker Plus");
            #endregion
        }
        
        #region Properties
        public WinButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[WinButton.PropertyNames.Name] = "Create";
                    this.mUICreateButton.WindowTitles.Add("ClaimStaker Plus");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICreateButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
